/*
 * This file is generated by jOOQ.
 */
package test.generated.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import test.generated.tables.Emojiorders;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmojiordersRecord extends UpdatableRecordImpl<EmojiordersRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>login.emojiorders.userID</code>.
     */
    public void setUserid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>login.emojiorders.userID</code>.
     */
    public Integer getUserid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>login.emojiorders.emojiID</code>.
     */
    public void setEmojiid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>login.emojiorders.emojiID</code>.
     */
    public Integer getEmojiid() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Emojiorders.EMOJIORDERS.USERID;
    }

    @Override
    public Field<Integer> field2() {
        return Emojiorders.EMOJIORDERS.EMOJIID;
    }

    @Override
    public Integer component1() {
        return getUserid();
    }

    @Override
    public Integer component2() {
        return getEmojiid();
    }

    @Override
    public Integer value1() {
        return getUserid();
    }

    @Override
    public Integer value2() {
        return getEmojiid();
    }

    @Override
    public EmojiordersRecord value1(Integer value) {
        setUserid(value);
        return this;
    }

    @Override
    public EmojiordersRecord value2(Integer value) {
        setEmojiid(value);
        return this;
    }

    @Override
    public EmojiordersRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmojiordersRecord
     */
    public EmojiordersRecord() {
        super(Emojiorders.EMOJIORDERS);
    }

    /**
     * Create a detached, initialised EmojiordersRecord
     */
    public EmojiordersRecord(Integer userid, Integer emojiid) {
        super(Emojiorders.EMOJIORDERS);

        setUserid(userid);
        setEmojiid(emojiid);
    }
}
