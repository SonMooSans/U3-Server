/*
 * This file is generated by jOOQ.
 */
package test.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import test.generated.tables.Friendinvite;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FriendinviteRecord extends UpdatableRecordImpl<FriendinviteRecord> implements Record3<Integer, Integer, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>login.friendinvite.senderID</code>.
     */
    public void setSenderid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>login.friendinvite.senderID</code>.
     */
    public Integer getSenderid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>login.friendinvite.targetID</code>.
     */
    public void setTargetid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>login.friendinvite.targetID</code>.
     */
    public Integer getTargetid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>login.friendinvite.InviteDate</code>.
     */
    public void setInvitedate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>login.friendinvite.InviteDate</code>.
     */
    public LocalDateTime getInvitedate() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, LocalDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Friendinvite.FRIENDINVITE.SENDERID;
    }

    @Override
    public Field<Integer> field2() {
        return Friendinvite.FRIENDINVITE.TARGETID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Friendinvite.FRIENDINVITE.INVITEDATE;
    }

    @Override
    public Integer component1() {
        return getSenderid();
    }

    @Override
    public Integer component2() {
        return getTargetid();
    }

    @Override
    public LocalDateTime component3() {
        return getInvitedate();
    }

    @Override
    public Integer value1() {
        return getSenderid();
    }

    @Override
    public Integer value2() {
        return getTargetid();
    }

    @Override
    public LocalDateTime value3() {
        return getInvitedate();
    }

    @Override
    public FriendinviteRecord value1(Integer value) {
        setSenderid(value);
        return this;
    }

    @Override
    public FriendinviteRecord value2(Integer value) {
        setTargetid(value);
        return this;
    }

    @Override
    public FriendinviteRecord value3(LocalDateTime value) {
        setInvitedate(value);
        return this;
    }

    @Override
    public FriendinviteRecord values(Integer value1, Integer value2, LocalDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FriendinviteRecord
     */
    public FriendinviteRecord() {
        super(Friendinvite.FRIENDINVITE);
    }

    /**
     * Create a detached, initialised FriendinviteRecord
     */
    public FriendinviteRecord(Integer senderid, Integer targetid, LocalDateTime invitedate) {
        super(Friendinvite.FRIENDINVITE);

        setSenderid(senderid);
        setTargetid(targetid);
        setInvitedate(invitedate);
    }
}
