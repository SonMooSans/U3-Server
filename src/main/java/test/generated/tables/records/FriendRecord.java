/*
 * This file is generated by jOOQ.
 */
package test.generated.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import test.generated.tables.Friend;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FriendRecord extends UpdatableRecordImpl<FriendRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>login.friend.FirstUserID</code>.
     */
    public void setFirstuserid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>login.friend.FirstUserID</code>.
     */
    public Integer getFirstuserid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>login.friend.SecondUserID</code>.
     */
    public void setSeconduserid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>login.friend.SecondUserID</code>.
     */
    public Integer getSeconduserid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>login.friend.PrivateGroupID</code>.
     */
    public void setPrivategroupid(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>login.friend.PrivateGroupID</code>.
     */
    public Integer getPrivategroupid() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Friend.FRIEND.FIRSTUSERID;
    }

    @Override
    public Field<Integer> field2() {
        return Friend.FRIEND.SECONDUSERID;
    }

    @Override
    public Field<Integer> field3() {
        return Friend.FRIEND.PRIVATEGROUPID;
    }

    @Override
    public Integer component1() {
        return getFirstuserid();
    }

    @Override
    public Integer component2() {
        return getSeconduserid();
    }

    @Override
    public Integer component3() {
        return getPrivategroupid();
    }

    @Override
    public Integer value1() {
        return getFirstuserid();
    }

    @Override
    public Integer value2() {
        return getSeconduserid();
    }

    @Override
    public Integer value3() {
        return getPrivategroupid();
    }

    @Override
    public FriendRecord value1(Integer value) {
        setFirstuserid(value);
        return this;
    }

    @Override
    public FriendRecord value2(Integer value) {
        setSeconduserid(value);
        return this;
    }

    @Override
    public FriendRecord value3(Integer value) {
        setPrivategroupid(value);
        return this;
    }

    @Override
    public FriendRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FriendRecord
     */
    public FriendRecord() {
        super(Friend.FRIEND);
    }

    /**
     * Create a detached, initialised FriendRecord
     */
    public FriendRecord(Integer firstuserid, Integer seconduserid, Integer privategroupid) {
        super(Friend.FRIEND);

        setFirstuserid(firstuserid);
        setSeconduserid(seconduserid);
        setPrivategroupid(privategroupid);
    }
}
